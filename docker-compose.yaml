services:
  vote:
    build: 
      context: ./vote
      dockerfile: Dockerfile
      target: dev
    depends_on:
     redis:
       condition: service_healthy
    ports:
      - "8090:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    volumes:
      - ./vote:/usr/local/app 
   
  result:
    build: 
      context: ./result
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./result:/usr/local/app
    ports:
      - "8091:80"

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    depends_on:
     redis:
       condition: service_healthy
     db:
       condition: service_healthy

  redis:
    image: redis:latest
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
      - "./healthchecks:/healthchecks"
    healthcheck:
      test: /healthchecks/postgres.sh
      interval: "5s"

volumes:
  redis_data:
  db_data: